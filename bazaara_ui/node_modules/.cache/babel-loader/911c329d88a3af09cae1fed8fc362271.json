{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lin Li Oechsle\\\\Desktop\\\\bazaara_ui\\\\project_bazaaraUI\\\\bazaara_ui\\\\src\\\\Components\\\\Pages\\\\ShoppingLists\\\\ShoppingListView.js\";\nimport React from 'react';\nimport './styles.css';\nimport ShoppingListSelection from './ShoppingListSelection';\nimport ShoppingListDisplay from './ShoppingListDisplay';\nimport { ShoppingList, ShoppingListCollection } from './ShoppingList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ShoppingListView extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearInput = () => {\n      alert('clearing message: ' + this.state.value);\n      this.setState(() => {\n        return {\n          value: \"\"\n        };\n      });\n    };\n\n    this.handleAddList = (name, e) => {\n      //alert('new list name: ' + name);\n      //alert('current lists: ' + this.state.lists.toString())\n      //this.state.lists.add(this.state.value, []);\n      //this.state.lists.add(name, []);\n      //this.setState({lists: temp})\n      let isDuplicate = false;\n\n      for (let i = 0; i < this.state.lists.length; i++) {\n        if (this.state.lists[i].name == name) {\n          isDuplicate = true;\n        }\n      }\n\n      if (name.trim().length == 0) {\n        alert('invalid shopping name list: no empty string');\n      } else if (isDuplicate) {\n        alert('invalid shopping name list: no duplicate names');\n      } else {\n        var temp = [...this.state.lists];\n        temp.push(new ShoppingList(name, [])); //alert('size of collection ' + temp.length);\n        //this.setState({ lists: temp });\n\n        this.setState(() => {\n          return {\n            lists: temp\n          };\n        });\n      }\n\n      e.preventDefault();\n      this.clearInput();\n    };\n\n    this.handleRemoveList = () => {\n      //alert('attempting to remove list at index:' + this.state.listIndex);\n      var prevIndex = this.state.listIndex;\n      var temp = [...this.state.lists];\n      temp.splice(prevIndex, 1); //alert('temp contents: ' + temp.toString());\n\n      if (prevIndex == this.state.lists.length - 1) {\n        this.setState(() => {\n          return {\n            listIndex: prevIndex - 1,\n            lists: temp\n          };\n        });\n      } else {\n        this.setState(() => {\n          return {\n            lists: temp\n          };\n        });\n      }\n    };\n\n    this.state = {\n      value: \"\",\n      listIndex: 0,\n      lists: ShoppingListCollection.collection\n    };\n    this.changeListHandler = this.changeListHandler.bind(this);\n    this.handleAddList = this.handleAddList.bind(this);\n    this.handleRemoveList = this.handleRemoveList.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  changeListHandler(newIndex) {\n    this.setState({\n      listIndex: newIndex\n    });\n  }\n\n  handleInput(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"viewer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(ShoppingListSelection, {\n            changeListHandler: this.changeListHandler,\n            handleAddList: this.handleAddList,\n            lists: this.state.lists,\n            handleInput: this.handleInput,\n            value: this.state.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(ShoppingListDisplay, {\n            displayIndex: this.state.listIndex,\n            lists: this.state.lists\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"smallButton\",\n          onClick: this.handleRemoveList,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default ShoppingListView;","map":{"version":3,"sources":["C:/Users/Lin Li Oechsle/Desktop/bazaara_ui/project_bazaaraUI/bazaara_ui/src/Components/Pages/ShoppingLists/ShoppingListView.js"],"names":["React","ShoppingListSelection","ShoppingListDisplay","ShoppingList","ShoppingListCollection","ShoppingListView","Component","constructor","props","clearInput","alert","state","value","setState","handleAddList","name","e","isDuplicate","i","lists","length","trim","temp","push","preventDefault","handleRemoveList","prevIndex","listIndex","splice","collection","changeListHandler","bind","handleInput","newIndex","event","target","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './styles.css';\r\nimport ShoppingListSelection from './ShoppingListSelection'\r\nimport ShoppingListDisplay from './ShoppingListDisplay'\r\nimport { ShoppingList, ShoppingListCollection } from './ShoppingList'\r\n\r\nexport class ShoppingListView extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            value: \"\",\r\n            listIndex: 0,\r\n            lists: ShoppingListCollection.collection,\r\n        }\r\n        this.changeListHandler = this.changeListHandler.bind(this);\r\n        this.handleAddList = this.handleAddList.bind(this);\r\n        this.handleRemoveList = this.handleRemoveList.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n    }\r\n\r\n    changeListHandler(newIndex) {\r\n        this.setState({listIndex: newIndex})\r\n    \r\n    }\r\n\r\n    handleInput(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    clearInput = () => {\r\n        alert('clearing message: ' + this.state.value);\r\n\r\n        this.setState(() => {\r\n            return {\r\n                value: \"\",\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    handleAddList = (name, e) => {\r\n        //alert('new list name: ' + name);\r\n        //alert('current lists: ' + this.state.lists.toString())\r\n\r\n        //this.state.lists.add(this.state.value, []);\r\n       //this.state.lists.add(name, []);\r\n       \r\n        //this.setState({lists: temp})\r\n        let isDuplicate = false;\r\n        \r\n        \r\n        for (let i = 0; i < this.state.lists.length; i++) {\r\n            if (this.state.lists[i].name == name) {\r\n                isDuplicate = true;\r\n            }\r\n        }\r\n\r\n        if (name.trim().length == 0) {\r\n            alert('invalid shopping name list: no empty string');\r\n        } else if (isDuplicate) {\r\n            alert('invalid shopping name list: no duplicate names');\r\n        } else {\r\n            var temp = [...this.state.lists];\r\n            temp.push(new ShoppingList(name, []));\r\n            //alert('size of collection ' + temp.length);\r\n    \r\n            //this.setState({ lists: temp });\r\n    \r\n    \r\n            this.setState(() => {\r\n                return {\r\n                    lists: temp,\r\n                }\r\n            });\r\n        }\r\n        e.preventDefault();\r\n        this.clearInput();\r\n\r\n\r\n    }\r\n\r\n    handleRemoveList = () => {\r\n        //alert('attempting to remove list at index:' + this.state.listIndex);\r\n        var prevIndex = this.state.listIndex;\r\n        var temp = [...this.state.lists];\r\n        \r\n        temp.splice(prevIndex, 1);\r\n        //alert('temp contents: ' + temp.toString());\r\n\r\n\r\n        if (prevIndex == this.state.lists.length-1) {\r\n            this.setState(() => {\r\n                return {\r\n                    listIndex: prevIndex-1,\r\n                    lists: temp,\r\n                }\r\n            })\r\n        } else {\r\n            this.setState(() => {\r\n                return {\r\n                    lists: temp,\r\n                }\r\n            })\r\n        }\r\n\r\n\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        return(\r\n            <section className='container'>\r\n               <section className='viewer'>\r\n               <div className='column'>\r\n                        <ShoppingListSelection changeListHandler={this.changeListHandler} handleAddList={this.handleAddList} lists={this.state.lists} handleInput={this.handleInput} value={this.state.value}/>\r\n                    </div>\r\n                        \r\n                    <div className='column'>\r\n                        <ShoppingListDisplay displayIndex={this.state.listIndex} lists={this.state.lists}/>\r\n                        \r\n                    </div>\r\n                    <button className=\"smallButton\" onClick={this.handleRemoveList}>X</button>\r\n\r\n               </section>\r\n            </section>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default ShoppingListView;\r\n"]},"metadata":{},"sourceType":"module"}